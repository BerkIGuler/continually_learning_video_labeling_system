FRAMES_DIR: ./data/images  # where to save all frames
ANNOTATED_FRAMES_DIR: ./send_data/images  # where to save annotated frames by the user
LABELS_DIR: ./data/labels  # where to save all labels
ANNOTATED_LABELS_DIR: ./send_data/labels  # where to save labels for annotated frames by the user
VIDEO_DIR: ./videos  # test vids dir

# where to save yolo+deepsort applid video file, for this to be valid SAVE_ORIGINAL must be true
ORIGINAL_DIR: ./data/yolo_dsort

FILTERED_CLASSES: None  # if None detect all classes, else detected classes belong to given ids

SAVE_RAW: False  # if True save raw frames in a seperate dir
SAVE_EDITED_FRAMES: True  # if True, save annotated frames and labels to disk

SAVE_ORIGINAL: False  # if True saves tracker+detection outputs as a seperate video
DISPLAY_ORIGINAL: False  # if True display yolo+deepsort annotated video in a seperate video

# if True read from webcam 0 else operate on test vids
REAL_TIME: False

ID_TO_CLASS_CFG: id_to_class.yaml  # stores int_id:class_name pairs
ID_TO_COLOR_CFG: id_to_color.yaml  # stores int_id:rgb 3-tuple pairs
KEY_TO_CLASS_CFG: key_to_class.yaml  # stores keyboard_button:class_name pairs

X_SIZE: 1920  # display window width
Y_SIZE: 1080  # display window length

# network settings
HOST: '127.0.0.1'  # training machine's IP address
PORT: 65432  # port number where training machine is listening


# remote folders
FOLDER_SENT: send_data  # which folder name to zip and send to training machine
RECEIVE_SAVE_NAME: temp_received_model  # temporarily saves received model as temp_received_model.zip
